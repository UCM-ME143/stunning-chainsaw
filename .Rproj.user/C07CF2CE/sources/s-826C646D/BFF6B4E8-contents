# Digital Systems

In most modern systems, we've moved away from analog controllers to digital controllers for a number of reasons.

## Discrete Time

The basis for a digital system is in discrete time signals.

Discrete-Time Signals are

1. Composed of samples at discrete instants of time;
2. Often defined at evenly spaced intervals of time;
3. Undefined inbetween samples;

An example can be seen in Figure \@ref(fig:nice-fig2).  The signal is defined only for the samples and undefined (or rather, not drawn) in between.
```{r nice-fig2, echo=FALSE, fig.cap='Here is a nice figure!', out.width='80%', fig.asp=.75, fig.align='center'}
#The function
stem <- function(x,y,pch=16,linecol=1,clinecol=1,...){
if (missing(y)){
    y = x
    x = 1:length(x) }
    plot(x,y,pch=pch,...)
    for (i in 1:length(x)){
       lines(c(x[i],x[i]), c(0,y[i]),col=linecol)
    }
    lines(c(x[1]-2,x[length(x)]+2), c(0,0),col=clinecol)
}

#An example
x <- seq(0, 2*pi, by = 0.2)
stem(x,sin(x), main = 'Discrete Time Signal')
```

### Notation

Given an analog signal $y(t)$, we can sample it at every $T$ seconds. The resulting signal can be written as $y(kT)$ where $k$ now represents the sample step index.  

If the signal is sampled at regular increments of time T, then T is also known as the Sample Period.  The inverse of the sample period is the sample rate.

- Sample Period - $T$ (seconds)
- Sample Rate - $1/T$ (1/seconds = Hertz), $f_s$ 

The notation $y(kT)$ indicates a value of $y{t}$ at $t=kT$. The notation $y[k]$ denotes a discrete time signal that is only defined only for $k$ an integer.  Written more succinctly: Parentheses indicate continuous time, brackets indicate discrete time. 

It is important to reiterate that a discrete-time signal is only defined for $k$ is an integer.  A signal $f[k]$ is defined when $k$ is an integer; $f[1.6]$ does not exist.  However, the index for a discrete time signal may be positive or negative.  A sequence, written as ${f[n]}$, may describe $...,f[-2],f[-1],f[0],f[1],f[2],...$.  

### Discrete-Amplitude Signal
Most commonly, a discrete time signal is also a Discrete Amplitude signal.  A discrete amplitude signal is a signal for which $y[n]$ has only a finite possible amplitudes, in contrast to a continuous amplitude signal, for which the amplitude can assume any value $\infty < y[n] < \infty$.  

A discrete time, discrete amplitude signal is known as a Digital Signal.  An example of a digital signal is the output of an analog-to-digital converter which converts a continuous time, continuous amplitude signal into a signal readable by a computer.  The output of the analog-to-digital converter is represented by an eight bit binary number - which can only assume $2^8 = 256$ unique values.    

## Fundamental Discrete Time Signals}

### Unit Step Function and Unit Impulse Function
The first two fundamental discrete time signals are the Unit Step Function and Unit Impulse Function.

The unit step function is defined by:
\begin{equation} \label{unitstepfunction}
u[k] = \begin{cases}
0, & k = -1, -2, \ldots \\
1, & k = 0, 1, 2, \ldots\\
\end{cases}
\end{equation}

The output of a unit step function $f[k]$ is 0 for all integers of $k$ less than 0, and is 1 for all integers of $k$ equal to or greater than 0.  


Similarly, the unit impulse function is defined by:
\begin{equation}
\delta[k] = \begin{cases}
1, k = 0 \\
0, otherwise\\
\end{cases}
\end{equation}

The output of a unit impulse function $\delta[k]$ is 1 for $k=0$ and is 0 for all other values of $k$.  

### Time Shifting, Time Scaling, Time Reversal
Given a discrete time signal, it can be utilized with three time transformations: Discrete Time Shifting, Discrete Time Scaling and Discrete Time Reversal.  

**Discrete Time Shift**
Given a signal $y[k]$, the signal can be shifted along the time axis as $y[k-2]$.  This shifts the signal such that it starts 2 steps later - in otherwords, it delays the signal.